#!/bin/dash
#-----------------------------

. build/functions

#-----------------------


# Increase major if api has changed.

# API version
GAP_MAJOR=0             # Increase whenever we decide to break the API.
GAP_MINOR=7             # Increase for regular release
GAP_ABI_RELEASE=1       # Increase for every release, reset to 0 when GAP_ABI is change
GAP_ABI=4               # Increase whenever we break Application Binary Interface

# Settings
#---------------------------
MUSEPACK_PREFIX=/usr
FAAD_PREFIX=/usr
SMB_PREFIX=/usr

DEBUG=0

OPTION_PLUGIN_MAD=1
OPTION_PLUGIN_FORCE_MAD=0
OPTION_PLUGIN_VORBIS=1
OPTION_PLUGIN_FLAC=1
OPTION_PLUGIN_FAAD=1
OPTION_PLUGIN_FORCE_FAAD=0
OPTION_PLUGIN_MUSEPACK=0
OPTION_PLUGIN_SAMPLERATE=1
OPTION_PLUGIN_OGG=1
OPTION_PLUGIN_ALSA=1
OPTION_PLUGIN_OSS=1
OPTION_PLUGIN_PULSE=1
OPTION_PLUGIN_JACK=1
OPTION_PLUGIN_RSOUND=1
OPTION_PLUGIN_AVCODEC=0 # disabled for now
OPTION_PLUGIN_CDDA=1
OPTION_PLUGIN_MMS=1 # disabled for now
OPTION_PLUGIN_SMB=1


# Default Compiler Settings
# Use environment variables to override
#--------------------------
CXX=${CXX:-g++}
LINK=${LINK:-g++}
CPPFLAGS=${CPPFLAGS:-}
LIBS=${LIBS:-}
LIBPREFIX=${LIBPREFIX:-lib}
LIBEXT=${LIBEXT:-.so}
LIB=${LIB:-lib}
OUTPUTOBJ=${OUTPUTOBJ:--o }
OUTPUTBIN=${OUTPUTBIN:--o }
OBJEXT=${OBJEXT:-.o}
SONAME=${SONAME:--Wl,-soname,}

# Overriding Compiler Flags
# Either override GEN_CFLAGS, OPT_CFLAGS and DEBUG_CFLAGS individually
# or set CFLAGS which overrides all them
#-------------------------------------------------------
GEN_CFLAGS=${GEN_CFLAGS:--Wall -Wextra -Wdouble-promotion -Wshadow -Wformat=2 -pipe -fPIC -fvisibility=hidden}
OPT_CFLAGS=${OPT_CFLAGS:--O3 -march=native -fstack-protector }
DEBUG_CFLAGS=${DEBUG_CFLAGS:--g -fstack-protector-all}

# Overriding Linker Flags
# Either override GEN_LDFLAGS, OPT_LDFLAGS and DEBUG_LDFLAGS individually
# or set LDFLAGS which overrides all them
#-------------------------------------------------------
GEN_LDFLAGS=${GEN_LDFLAGS:--shared -fPIC}
OPT_LDFLAGS=${OPT_LDFLAGS:-}
DEBUG_LDFLAGS=${DEBUG_LDFLAGS:-}

# Parse Command Line Arguments
#-----------------------------
for arg in $@; do
  case $arg in
    --enable-debug*)
      DEBUG=1
      ;;
    --prefix=*)
      PREFIX=${arg#*=}
      ;;
    --lib64)
      LIB=lib64
      ;;
    --without-mad)
      OPTION_PLUGIN_MAD=0
      ;;
    --without-vorbis)
      OPTION_PLUGIN_VORBIS=0
      ;;
    --without-ogg)
      OPTION_PLUGIN_OGG=0
      ;;
    --without-flac)
      OPTION_PLUGIN_FLAC=0
      ;;
    --without-faad)
      OPTION_PLUGIN_FAAD=0
      ;;
    --with-musepack)
      OPTION_PLUGIN_MUSEPACK=1
      ;;
    --without-samplerate)
      OPTION_PLUGIN_SAMPLERATE=0
      ;;
    --without-cdda)
      OPTION_PLUGIN_CDDA=0
      ;;
    --without-smb)
      OPTION_PLUGIN_SMB=0
      ;;
    --without-alsa)
      OPTION_PLUGIN_ALSA=0
      ;;
    --without-oss)
      OPTION_PLUGIN_OSS=0
      ;;
    --without-pulse)
      OPTION_PLUGIN_PULSE=0
      ;;
    --without-rsound)
      OPTION_PLUGIN_RSOUND=0
      ;;
    --without-jack)
      OPTION_PLUGIN_JACK=0
      ;;
    --without-avcodec)
      OPTION_PLUGIN_AVCODEC=0
      ;;
    --without-mms)
      OPTION_PLUGIN_MMS=0
      ;;
    --with-mad)
      OPTION_PLUGIN_FORCE_MAD=1
      ;;
    --with-faad)
      OPTION_PLUGIN_FORCE_FAAD=1
      ;;
    --mad-prefix=*)
      MAD_PREFIX=${arg#*=}
      pkgconfig_add_path $MAD_PREFX
      ;;
    --musepack-prefix=*)
      MUSEPACK_PREFIX=${arg#*=}
      ;;
    --faad-prefix=*)
      FAAD_PREFIX=${arg#*=}
      ;;
    --smb-prefix=*)
      SMB_PREFIX=${arg#*=}
      ;;
    --fox-prefix=*)
      FOX_PREFIX=${arg#*=}
      pkgconfig_add_path $FOX_PREFIX
      ;;
    --help|-h)
      echo "Options:"
      echo "   --enable-debug                  Compile with debug information"
      echo "   -h,--help                       Show Help"
      echo " "
      echo "Components: "
      echo "   --without-mad                   Compile without mad support"
      echo "   --without-vorbis                Compile without vorbis support"
      echo "   --without-ogg                   Compile without ogg support"
      echo "   --without-flac                  Compile without flac support"
      echo "   --without-faad                  Compile without faad support"
      echo "   --without-samplerate            Compile without samplerate support"
      echo "   --without-cdda                  Compile without cdda support"
      echo "   --without-smb                   Compile without smb support"
      echo "   --without-alsa                  Compile without alsa support"
      echo "   --without-oss                   Compile without oss support"
      echo "   --without-pulse                 Compile without pulseaudio support"
      echo "   --without-rsound                Compile without rsound support"
      echo "   --without-avcodec               Compile without avcodec support"
      echo " "
      echo "   --with-mad                      Compile with mad support. (force) "
      echo "   --with-musepack                 Compile with musepack (sv7) support. "
      echo " "
      echo "   --fox-prefix=<p>                FOX prefix path"
      echo "   --mad-prefix=<p>                Mad prefix path"
      echo "   --musepack-prefix=<p>           Musepack prefix path"
      echo " "
      echo "Install Directories: "
      echo "   --prefix=<p>                	   Install Prefix (/usr)"
      echo "   --lib64                         Install in lib64 instead of lib"
      echo " "
      exit 0
      ;;
  esac
done

#Setup Destination Directories
PREFIX=${PREFIX:-/usr}
LIBDIR="${PREFIX}/$LIB"
INCLUDEDIR="${PREFIX}/include"


# Debug / Release Mode
#----------------------
if [ $DEBUG -eq 1 ] ; then
  CFLAGS=${CFLAGS:-$GEN_CFLAGS $DEBUG_CFLAGS}
  LDFLAGS=${LDFLAGS:-$GEN_LDFLAGS $DEBUG_LDFLAGS}
  DEFINES="$DEFINES -DDEBUG"
else
  CFLAGS=${CFLAGS:-$GEN_CFLAGS $OPT_CFLAGS}
  LDFLAGS=${LDFLAGS:-$GEN_LDFLAGS $OPT_LDFLAGS}
  DEFINES="$DEFINES -DNDEBUG"
fi

# So plugins can find header files
CPPFLAGS="-Iinclude -Isrc $CPPFLAGS"

# Needed for ffmpeg
DEFINES="$DEFINES -D__STDC_CONSTANT_MACROS"

###############################################################################

# Init Config File
#------------------------------
PLUGIN_PATH="$LIBDIR/gaplayer-$GAP_MAJOR"
echo "/* Generated by configure utility */"     > src/ap_config.h
echo "#define AP_PLUGIN_PATH \"$PLUGIN_PATH\"" >> src/ap_config.h

# Find Libraries
#------------------------
check_fox
check_packages
check_musepack
check_faad
check_smb
check_alsa
check_oss
check_pulse
check_jack
check_rsound

# These may not be detected correctly, so lets add them
check_forced_mad

check_expat

# needed for getaddrinfo_a
# check_anl

###############################################################################
GAP_PKGCONFIG=src/libgaplayer-${GAP_MAJOR}.pc

# Generate pkg-config file
#------------------------
echo "# Generated by configure"                          > $GAP_PKGCONFIG
echo "prefix=$PREFIX"                                   >> $GAP_PKGCONFIG
echo "includedir=\${prefix}/include"                    >> $GAP_PKGCONFIG
echo "libdir=\${prefix}/$LIB"                           >> $GAP_PKGCONFIG
echo ""                                                 >> $GAP_PKGCONFIG
echo "Name: libgaplayer"                                >> $GAP_PKGCONFIG
echo "Description: Goggles Audio Player Library"        >> $GAP_PKGCONFIG
echo "URL: http://gogglesmm.googlecode.com"             >> $GAP_PKGCONFIG
echo "Version: ${GAP_MAJOR}.${GAP_MINOR}"               >> $GAP_PKGCONFIG
echo "Requires: fox17 >= 1.7.0"                           >> $GAP_PKGCONFIG
echo "Libs: -L\${libdir} -lgaplayer-${GAP_MAJOR}"            >> $GAP_PKGCONFIG
echo "Cflags: -I\${includedir}/gaplayer-${GAP_MAJOR}"        >> $GAP_PKGCONFIG

# Generate version file
#------------------------
echo "#ifndef AP_VERSION_H"                       > include/ap_version.h
echo "#define AP_VERSION_H"                      >> include/ap_version.h
echo "#define AP_MAJOR ${GAP_MAJOR}"             >> include/ap_version.h
echo "#define AP_MINOR ${GAP_MINOR}"             >> include/ap_version.h
echo ""                                          >> include/ap_version.h
echo "namespace ap {"                            >> include/ap_version.h
echo "extern GMAPI void ap_get_version(FXuchar & major,FXuchar & minor);"  >> include/ap_version.h
echo "extern GMAPI FXbool ap_check_version(FXuchar major,FXuchar minor);"  >> include/ap_version.h
echo "}"                                         >> include/ap_version.h
echo "#endif"                                    >> include/ap_version.h


# Write config file
#--------------------------------------
echo "#Generated by configure utility"                     > config.make
echo "CXX=$CXX"                                           >> config.make
echo "LINK=$LINK"                                         >> config.make
echo "CFLAGS=$CFLAGS"                                     >> config.make
echo "CPPFLAGS=$DEFINES $CPPFLAGS"                        >> config.make
echo "LDFLAGS=$LDFLAGS"                                   >> config.make
echo "LIBS=$LIBS"                                         >> config.make
echo "OUTPUTOBJ=$OUTPUTOBJ"                               >> config.make
echo "OUTPUTBIN=$OUTPUTBIN"                               >> config.make
echo "OBJEXT=$OBJEXT"                                     >> config.make
echo "PREFIX=$PREFIX"                                     >> config.make
echo "GAP_MAJOR=$GAP_MAJOR"                               >> config.make
echo "GAP_MINOR=$GAP_MINOR"                               >> config.make
echo "GAP_ABI=$GAP_ABI"                                   >> config.make
echo "GAP_ABI_RELEASE=$GAP_ABI_RELEASE"                   >> config.make
echo "LIBDIR=$LIBDIR"                                     >> config.make
echo "INCLUDEDIR=$INCLUDEDIR"                             >> config.make
echo "SONAME=$SONAME"                                     >> config.make
echo "PLUGINS=$PLUGINS"            		                    >> config.make

echo "PLUGIN_LIBS=$PLUGIN_LIBS"            								>> config.make
echo "PLUGIN_CFLAGS=$PLUGIN_CFLAGS "        							>> config.make
echo "PLUGIN_CPPFLAGS=$PLUGIN_DEFINES $PLUGIN_CPPFLAGS"   >> config.make

echo "ALSA_LIBS=$ALSA_LIBS"            										>> config.make
echo "ALSA_CFLAGS=$ALSA_CFLAGS"        										>> config.make
echo "ALSA_CPPFLAGS=$ALSA_CPPFLAGS"    										>> config.make

echo "OSS_LIBS=$OSS_LIBS"              										>> config.make
echo "OSS_CFLAGS=$OSS_CFLAGS"          										>> config.make
echo "OSS_CPPFLAGS=$OSS_CPPFLAGS"      										>> config.make

echo "PULSE_LIBS=$PULSE_LIBS"              							  >> config.make
echo "PULSE_CFLAGS=$PULSE_CFLAGS"          								>> config.make
echo "PULSE_CPPFLAGS=$PULSE_CPPFLAGS"      								>> config.make

echo "RSOUND_LIBS=$RSOUND_LIBS"              							>> config.make
echo "RSOUND_CFLAGS=$RSOUND_CFLAGS"          						  >> config.make
echo "RSOUND_CPPFLAGS=$RSOUND_CPPFLAGS"      							>> config.make

echo "JACK_LIBS=$JACK_LIBS"              							    >> config.make
echo "JACK_CFLAGS=$JACK_CFLAGS"          								  >> config.make
echo "JACK_CPPFLAGS=$JACK_CPPFLAGS"      								  >> config.make


# Print Summary
#------------------------

echo "---------------------------------------------"
echo "Plugins:"
for arg in $PLUGINS; do
	echo "  => $arg"
done

echo ""
echo "Install Path:"
echo "  Prefix => $PREFIX"
echo "  Libraries => $LIBDIR"
echo "  Plugins => $PLUGIN_PATH"
echo "  Headers => $INCLUDEDIR"
echo "---------------------------------------------"

# Success
#--------------------------------------
echo "Done."
echo "Please run \"make\" and \"make install\" to compile and install libgaplayer."
exit 0

